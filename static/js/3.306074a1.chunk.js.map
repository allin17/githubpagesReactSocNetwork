{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Button.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileInfo","props","useState","profile","Preloader","className","s","description","src","photos","large","isOwner","type","onChange","e","target","files","length","savePhoto","Post","item","alt","message","likesCount","_excluded","useButtonProps","tagName","disabled","href","rel","onClick","tabIndex","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","Button","React","_ref","ref","asProp","as","source","excluded","i","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","Component","_jsx","displayName","ThemeContext","prefixes","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","useContext","ThemeProvider","bsPrefix","variant","size","active","classNames","defaultProps","MyPosts","prevProps","prevState","snapshot","console","log","postData","this","posts","map","p","postsAll","PostsFormRedux","onSubmit","value","addPost","newPostMessage","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","status","updateStatus","ProfileContainer","refreshProfile","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.306074a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__1_btZ\",\"contact\":\"ProfileInfo_contact__11tR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsAll\":\"MyPosts_postsAll__EBT-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1cKoQ\"};","export default __webpack_public_path__ + \"static/media/ProfileStatusWithHooks.bd7e6779.bin\";","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport Preloader from \"../../../common/Preloader/Preloader\";\n\nconst ProfileInfo = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n\n    if(!props.profile) {\n        return <Preloader />\n    }\n\n    /*const Contact = ({contactTitle, contactValue}) => {\n        return <div className={s.contact}><b>{contactTitle}</b>:{contactValue}</div>\n    }*/\n\n    const onPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            {/*<div>\n            <img src='https://www.gettyimages.com/gi-resources/images/500px/983794168.jpg' width=\"500px\"/>\n        </div>*/}\n            <div className={s.description}>\n                <img src={props.profile.photos.large}/>\n                {props.isOwner && <input type={'file'} onChange={onPhotoSelected}/>}\n\n               {/* <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>*/}\n                {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}\n                {/*<div>aboutMe: {props.profile.aboutMe}</div>\n                <div>FullName - {props.profile.fullName}</div>*/}\n            </div>\n        </div>\n\n    )\n}\n\n   /* const ProfileData=(props)=> {\n        return (\n            <div>\n                <div>\n                    <img src={props.profile.photos.large} className={s.mainPhoto}/>\n                    {props.isOwner && <button onClick={props.goToEditMode}>edit</button>}\n                </div>\n            <div>\n            <b>Full name</b> : {props.profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b> : {props.profile.lookingForAJob ? 'yes' : 'no'}\n        </div>\n        {props.profile.lookingForAJob &&\n        <div>\n            <b>My professional skills</b>:{props.profile.lookingForAJobDescription}\n        </div>}\n        <div>\n            <b>Looking for a job</b> : {props.profile.lookingForAJob ? 'yes' : 'no'}\n        </div>\n\n        <div>\n            <b> About me </b>: {props.profile.aboutMe}\n        </div>\n\n        <div>\n            <b> Contacts </b>: {Object.keys(props.profile.contacts).map(key =>\n        {return <Contact key={key} contactValue={props.profile.contacts[key]}/>})}\n        </div>\n    </div>)\n    }*/\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\nconst Post = (props) => {\n\n    return (\n        <div className={s.item}>\n          <img src='https://ratatum.com/wp-content/uploads/2017/09/%D0%9A%D1%82%D0%BE-%D1%81%D1%82%D0%B0%D0%BD%D0%B5%D1%82-%D0%BF%D1%80%D0%B5%D0%B7%D0%B8%D0%B4%D0%B5%D0%BD%D1%82%D0%BE%D0%BC-%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D0%B8-%D0%B2-2018-%D0%B3%D0%BE%D0%B4%D1%83.jpg' alt=\"avatar \"/>\n          {props.message}\n          <div>\n          <span>like {props.likesCount}</span>\n          </div>\n          </div>\n    ) \n  }\nexport default Post;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {}\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    dir\n  }), [prefixes, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../../common/FormControls/FormsControls\";\nimport Button from 'react-bootstrap/Button';\n\n\nclass MyPosts extends React.Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('kpaso')\n    }\n\n    render() {\n\n        let postData = this.props.posts\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>)\n\n        let newPostElement = React.createRef();\n\n        /*let onAddPost = () => {\n            props.addPost();\n        }*/\n\n        let addPost = (value) => {\n            this.props.addPost(value.newPostMessage)\n        }\n\n        return (\n            <div className={s.postsAll}>\n                <h3>My posts</h3>\n                <PostsFormRedux onSubmit={addPost}/>\n                <div className={s.posts}>\n                    {postData}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst maxLength10=maxLengthCreator(10)\n\n  const PostsForm = (props) => {\n      return <form onSubmit={props.handleSubmit}>\n          <Field component={Textarea} name={'newPostMessage'}\n                 validate={[required, maxLength10]}/>\n          {/*<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>*/}\n          <Button variant=\"primary\">Add post</Button>\n          <Button variant=\"primary\">Remove post</Button>\n      </form>\n  }\nconst PostsFormRedux = reduxForm({form: 'postsForm'})(PostsForm)\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostMessage) => {\n            dispatch(addPostActionCreator(newPostMessage));\n        }\n    }\n}\n\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts) ;\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n    return <div>\n        <ProfileInfo isOwner={props.isOwner}\n                     profile={props.profile}\n                     status={props.status}\n                     updateStatus={props.updateStatus}\n                     savePhoto={props.savePhoto}/>\n        <MyPostsContainer/>\n    </div>\n}\n\nexport default Profile;","import React from 'react'\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile =()=>{\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.match.params.userId != prevProps.match.params.userId){\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n})}\n\nexport default compose(\n    connect(mapStateToProps, {setUserProfile, getUserProfile, getStatus, updateStatus, savePhoto}),\n    withRouter\n)(ProfileContainer)"],"sourceRoot":""}