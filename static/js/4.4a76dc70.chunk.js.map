{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DIalogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","dialog","mes","DialogItem","active","to","id","name","maxLength50","maxLengthCreator","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","required","Dialogs","dialogElement","messagesPage","dialogs","map","d","message","messages","m","isAuth","dialogsItems","value","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","mapStateToProps","mapDispatchToProps","dispatch","sendMessageCreator","compose"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,8FCepPC,EAZC,SAACC,GAOb,OAAO,qBAAKC,UAAWC,IAAEC,OAAlB,SACFH,EAAMI,O,QCFAC,EANI,SAACL,GAChB,OAAO,qBAAKC,UAAWC,IAAEC,OAAQ,IAAKD,IAAEI,OAAjC,SACH,eAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,cAAuCR,EAAMS,W,kCC+BnCC,EAAYC,YAAiB,IAezBC,EAAmBC,YAAU,CAACC,KAAK,eAAhBD,EAdT,SAACb,GACjB,OAAO,uBAAMe,SAAUf,EAAMgB,aAAtB,UACH,cAACC,EAAA,EAAD,CAAOC,UAAW,WACXT,KAAM,iBACNU,YAAY,qBACZC,SAAU,CAACC,IAAUX,KAE5B,8BACI,kDAQGY,EA9CX,SAACtB,GAEb,IAAIuB,EAAgBvB,EAAMwB,aAAaC,QAClCC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYnB,GAAImB,EAAEnB,GAAIC,KAAMkB,EAAElB,MAAWkB,EAAEnB,OACtDoB,EAAU5B,EAAMwB,aAAaK,SAC5BH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS1B,IAAK0B,EAAE1B,KAAU0B,EAAEtB,OAO3C,OAAIR,EAAM+B,OAGN,sBAAK9B,UAAWC,IAAEuB,QAAlB,UACI,qBAAKxB,UAAWC,IAAE8B,aAAlB,SACKT,IAEL,sBAAMtB,UAAWC,IAAE2B,SAAnB,UACI,8BAAMD,IACN,8BACI,cAAChB,EAAD,CAAkBG,SAff,SAACkB,GAChBjC,EAAMkC,YAAYD,EAAME,2BAIH,cAAC,IAAD,CAAU5B,GAAI,Y,+CChBvC6B,EAA6B,SAACC,GAAD,MAAY,CACzCN,OAAQM,EAAMC,KAAKP,SAGVQ,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAG/B,OAAIC,KAAK1C,MAAM+B,OACR,cAACS,EAAD,eAAeE,KAAK1C,QADG,cAAC,IAAD,CAAUO,GAAI,eAHb,GACXoC,IAAMH,WAStC,OAFoCI,YAAQR,EAARQ,CAAoCH,I,QCTxEI,EAAkB,SAACR,GACnB,MAAO,CACHb,aAAca,EAAMb,eAIxBsB,EAAqB,SAACC,GACtB,MAAO,CACHb,YAAY,SAACC,GACTY,EAASC,YAAmBb,OAIxCc,YACIV,EACAK,YAAQC,EAAiBC,GAF7BG,CAGE3B,GAGa2B,sBACXV,EACAK,YAAQC,EAAiBC,GAFdG,CAGb3B","file":"static/js/4.4a76dc70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2DrBZ\",\"messageText\":\"Dialogs_messageText__6EpBx\",\"messageBox\":\"Dialogs_messageBox__3kWUy\",\"dialogsItems\":\"Dialogs_dialogsItems__3HSUf\",\"dialog\":\"Dialogs_dialog__2-DFB\",\"active\":\"Dialogs_active__IhGUT\",\"messages\":\"Dialogs_messages__2__a_\"};","import React from 'react';\nimport s from './../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    let newMessage= React.createRef();\n\n   /* let sendMessage= () => {\n        let text=newMessage.current.value;/!*\n        props.dispatch( sendMessageActionCreator() )*!/;\n    }*/\n    return <div className={s.dialog}>\n        {props.mes}\n    </div>\n}\n\nexport default Message;\n","import React from 'react';\nimport s from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return <div className={s.dialog+ ' ' +s.active}>\n        <NavLink to={\"/dialogs/\" + props.id}> {props.name}</NavLink>\n        </div>\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './Dialogs.module.css'\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DIalogItem/DialogItem\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators\";\n\nconst Dialogs = (props) => {\n\n    let dialogElement = props.messagesPage.dialogs\n        .map( d => <DialogItem id={d.id} name={d.name} key={d.id}/>)\n    let message = props.messagesPage.messages\n        .map( m => <Message mes={m.mes} key={m.id}/> )\n\n    let addNewMessage =(value)=>{\n        props.sendMessage(value.newMessageBody);\n    }\n\n\n    if(!props.isAuth) return <Redirect to={'/login'}/>\n\n        return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogElement}\n            </div>\n            <div  className={s.messages}>\n                <div>{message}</div>\n                <div>\n                    <MessageFormRedux onSubmit={addNewMessage} />\n                </div>\n            </div>\n\n            </div>\n            )\n            }\n            const maxLength50=maxLengthCreator(50)\n            const MessageForm = (props) => {\n                return <form onSubmit={props.handleSubmit}>\n                    <Field component={'textarea'}\n                           name={'newMessageBody'}\n                           placeholder='Enter your message'\n                           validate={[required, maxLength50]}\n                    />\n                    <div>\n                        <button>\n                            Send\n                        </button>\n                    </div>\n                </form>\n            }\n                const MessageFormRedux = reduxForm({form:'messageForm'})(MessageForm)\n\n            export default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n                if(!this.props.isAuth) return <Redirect to={'/login'} />\n                return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent= connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) =>{\n    return {\n        messagesPage: state.messagesPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) =>{\n    return {\n        sendMessage:(newMessageBody)=>{\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n}}\n\ncompose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs)\n\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs)"],"sourceRoot":""}