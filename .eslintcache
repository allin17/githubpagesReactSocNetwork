[{"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\index.js":"1","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\App.js":"2","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\reportWebVitals.js":"3","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\redux-store.js":"4","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\app-reducer.js":"5","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\common\\Preloader\\Preloader.js":"6","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Navbar\\Navbar.jsx":"7","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Music\\Music.jsx":"8","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Users\\UsersContainer.jsx":"9","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Settings\\Settings.jsx":"10","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Login\\Login.jsx":"11","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Header\\HeaderContainer.jsx":"12","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\ProfileContainer.jsx":"13","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\DialogsContainer.jsx":"14","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\dialogs-reducer.js":"15","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\users-reducer.js":"16","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\profile-reducer.js":"17","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\auth-reducer.js":"18","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\users-selectors.js":"19","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\common\\FormControls\\FormsControls.js":"20","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\utils\\validators.js":"21","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\hoc\\withAuthRedirect.js":"22","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Users\\Users.jsx":"23","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\Profile.jsx":"24","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Header\\Header.jsx":"25","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\Dialogs.jsx":"26","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\API\\API.js":"27","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Users\\Paginator.jsx":"28","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"29","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"30","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\DIalogItem\\DialogItem.jsx":"31","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\Message\\Message.jsx":"32","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"33","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"34"},{"size":564,"mtime":1637944201648,"results":"35","hashOfConfig":"36"},{"size":2553,"mtime":1637950836424,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1637944201653,"results":"38","hashOfConfig":"36"},{"size":780,"mtime":1637944201652,"results":"39","hashOfConfig":"36"},{"size":711,"mtime":1637944201649,"results":"40","hashOfConfig":"36"},{"size":182,"mtime":1637944201628,"results":"41","hashOfConfig":"36"},{"size":962,"mtime":1637944201636,"results":"42","hashOfConfig":"36"},{"size":179,"mtime":1637944201635,"results":"43","hashOfConfig":"36"},{"size":2023,"mtime":1637944201646,"results":"44","hashOfConfig":"36"},{"size":186,"mtime":1637944201644,"results":"45","hashOfConfig":"36"},{"size":1672,"mtime":1637944201634,"results":"46","hashOfConfig":"36"},{"size":520,"mtime":1637944201633,"results":"47","hashOfConfig":"36"},{"size":1668,"mtime":1637944201641,"results":"48","hashOfConfig":"36"},{"size":714,"mtime":1637944201631,"results":"49","hashOfConfig":"36"},{"size":836,"mtime":1637944201650,"results":"50","hashOfConfig":"36"},{"size":3799,"mtime":1637944201653,"results":"51","hashOfConfig":"36"},{"size":2737,"mtime":1637944201651,"results":"52","hashOfConfig":"36"},{"size":2209,"mtime":1637944201650,"results":"53","hashOfConfig":"36"},{"size":501,"mtime":1637944201653,"results":"54","hashOfConfig":"36"},{"size":736,"mtime":1637944201628,"results":"55","hashOfConfig":"36"},{"size":275,"mtime":1637944201654,"results":"56","hashOfConfig":"36"},{"size":594,"mtime":1637944201647,"results":"57","hashOfConfig":"36"},{"size":1875,"mtime":1637944201646,"results":"58","hashOfConfig":"36"},{"size":491,"mtime":1637944201640,"results":"59","hashOfConfig":"36"},{"size":532,"mtime":1637944201633,"results":"60","hashOfConfig":"36"},{"size":1831,"mtime":1637944201630,"results":"61","hashOfConfig":"36"},{"size":1697,"mtime":1637944201623,"results":"62","hashOfConfig":"36"},{"size":1338,"mtime":1637944201645,"results":"63","hashOfConfig":"36"},{"size":604,"mtime":1637944201639,"results":"64","hashOfConfig":"36"},{"size":2460,"mtime":1637944201641,"results":"65","hashOfConfig":"36"},{"size":308,"mtime":1637944201630,"results":"66","hashOfConfig":"36"},{"size":376,"mtime":1637944201632,"results":"67","hashOfConfig":"36"},{"size":1655,"mtime":1637944201638,"results":"68","hashOfConfig":"36"},{"size":574,"mtime":1637944201639,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"12l7k4s",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"72"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\index.js",[],["154","155"],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\App.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\reportWebVitals.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\redux-store.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\app-reducer.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\common\\Preloader\\Preloader.js",["156"],"import preloader from \"../../assets/images/1480.gif\";\nimport React from \"react\";\n\nlet Preloader = (props)=>{\n    return <div><img src={preloader}/></div>\n}\n\nexport default Preloader;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Music\\Music.jsx",["157"],"import React from 'react';\nimport s from './Music.module.css'\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\nexport default Music;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Users\\UsersContainer.jsx",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Settings\\Settings.jsx",["158"],"import React from 'react';\nimport s from './Settings.module.css'\n\nconst Settings = (props) =>{\n    return (\n        <div>\n            Set\n        </div>\n    )\n}\n\nexport default Settings;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Login\\Login.jsx",["159"],"import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../common/FormControls/FormsControls\";\nimport {required} from \"../../utils/validators\";\nimport {connect} from \"react-redux\";\nimport {login, logout} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport s from './../../common/FormControls/FormControl.module.css'\n\nconst LoginForm =({handleSubmit, error, captchaUrl})=> {\n    return (\n    <form onSubmit={handleSubmit}>\n        <div><Field placeholder={'Email'} name={'email'}\n                    component={Input}\n                    validate={[required]}\n        /></div>\n\n        <div><Field placeholder={'Password'} name={'password'}\n                    type={'password'}\n                    validate={[required]}\n                    component={Input}/></div>\n\n        <div><Field component={Input} type={'checkbox'}/> remember me </div>\n\n        {captchaUrl && <img src={captchaUrl} />}\n\n        <div className={s.formSummaryError}>\n            {error}\n        </div>\n        <div><button>LOGIN</button></div>\n    </form>\n)\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit=(formData)=>{\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return <div>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\n\nconst mapStateToProps =(state) => ({\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl,\n})\n\nexport default connect(mapStateToProps, {login, logout})(Login);","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Header\\HeaderContainer.jsx",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\ProfileContainer.jsx",["160"],"import React from 'react'\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile =()=>{\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.match.params.userId != prevProps.match.params.userId){\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n})}\n\nexport default compose(\n    connect(mapStateToProps, {setUserProfile, getUserProfile, getStatus, updateStatus, savePhoto}),\n    withRouter\n)(ProfileContainer)","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\DialogsContainer.jsx",["161"],"import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) =>{\n    return {\n        messagesPage: state.messagesPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) =>{\n    return {\n        sendMessage:(newMessageBody)=>{\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n}}\n\ncompose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs)\n\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs)","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\dialogs-reducer.js",["162","163"],"\nconst SEND_MESSAGE='SEND_MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Zahar'},\n        {id: 2, name: 'Mersedes'},\n        {id: 3, name: 'BMW'}\n    ],\n    messages: [\n        {mes: 'Its mem wow!'},\n        {mes: 'You can buy a brand new G63 AMG'},\n        {mes: 'Omg kak react'}\n    ],\n}\nconst dialogsReducer = (state=initialState, action) => {\n\n    let stateCopy = {\n        ...state,\n       // messages: [...state.messages]\n    }\n    switch(action.type){\n        case SEND_MESSAGE:\n            let body=action.newMessageBody;\n\n            return {\n                ...state,\n                messages: [...state.messages, {id:4, message: body}]\n            }\n    }\n    return state;\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\n\nexport default dialogsReducer;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\users-reducer.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\profile-reducer.js",["164"],"import {profileAPI, usersAPI} from \"../API/API\";\n\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: \"Hi, how are you?\", likesCount: 21},\n        {id: 2, message: \"It's my first post\", likesCount: 11}\n    ],\n    profile: null,\n    status: '',\n}\n\nconst profileReducer = (state=initialState, action)=> {\n\n    switch(action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostMessage,\n                likesCount: 0\n            }\n            return {\n            ...state,\n                posts:[...state.posts, newPost],\n                newPostText:''\n            }\n        }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            }//action.profile\n\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p=>p.id!=action.postId)\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default:\n            return state\n    }\n\n}\n\nexport const addPostActionCreator = (newPostMessage) => ({type: ADD_POST, newPostMessage})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const savePhotoSuccess= (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId)\n        dispatch(setUserProfile(response.data));\n    }\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n            dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n\n            if (response.data.resultCode===0) {\n                dispatch(setStatus(status));\n            }\n}\n\nexport const savePhoto = (file) => (dispatch) => {\n    let response = profileAPI.savePhoto(file)\n\n            if (response.data.resultCode===0) {\n                dispatch(savePhotoSuccess(response.data.data.photos));\n            }\n}\n\n\nexport default profileReducer;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\auth-reducer.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\redux\\users-selectors.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\common\\FormControls\\FormsControls.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\utils\\validators.js",["165"],"export const required = value => {\n    if (value) return undefined;\n\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return 'Max length is ${maxLength} symbols'\n\n    return undefined\n}\n\n","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\hoc\\withAuthRedirect.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Users\\Users.jsx",["166"],"import React from 'react'\nimport s from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport Paginator from \"./Paginator\";\n\nlet User = ({currentPage, onPageChanged, totalUsersCount, pageSize,portionSize, ...props}) => {\nreturn <div>\n    <Paginator currentPage={currentPage}\n               onPageChanged={onPageChanged}\n               totalUsersCount={totalUsersCount}\n               pageSize={pageSize}\n               portionSize={portionSize}\n    />\n        {\n            props.users.map(u => <div key={u.id}>\n                <span>\n                    <div>\n                        <NavLink to = {'/profile/'+u.id}>\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.usersPhoto}/>\n                        </NavLink>\n                        </div>\n                    <div>\n                        {u.followed ? <button disabled={props.followingInProgress.some(id=>id===u.id)}\n                                              onClick={() => {\n                                props.unfollow(u.id)\n\n                            }}>Unfollow</button>\n                            : <button disabled={props.followingInProgress.some(id=>id===u.id)}\n                                onClick={() => {\n                                props.follow(u.id)\n                            }}>Follow</button>}\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"u.location.city\"}</div>\n                        <div>{\"u.location.country\"}</div>\n                    </span>\n                </span>\n            </div>)}\n\n    </div>\n}\n\nexport default User;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\Profile.jsx",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Header\\Header.jsx",["167"],"import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return <header className={s.header}>\n    <img src='https://www.dusterauto.ru/wp-content/uploads/2018/11/VAG-logo.jpg' />\n\n    <div className={s.loginBlock}>\n        { props.isAuth\n            ? <div className={s.log}>{props.login} - <button onClick={props.logout}>Logout</button></div>\n            : <NavLink to={'/login'}>Login</NavLink> }\n        </div>\n  </header>\n}\n\nexport default Header;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\Dialogs.jsx",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\API\\API.js",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Users\\Paginator.jsx",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["168"],"import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostMessage) => {\n            dispatch(addPostActionCreator(newPostMessage));\n        }\n    }\n}\n\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts) ;\n\nexport default MyPostsContainer;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["169","170","171","172"],"import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport Preloader from \"../../../common/Preloader/Preloader\";\n\nconst ProfileInfo = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n\n    if(!props.profile) {\n        return <Preloader />\n    }\n\n    /*const Contact = ({contactTitle, contactValue}) => {\n        return <div className={s.contact}><b>{contactTitle}</b>:{contactValue}</div>\n    }*/\n\n    const onPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            {/*<div>\n            <img src='https://www.gettyimages.com/gi-resources/images/500px/983794168.jpg' width=\"500px\"/>\n        </div>*/}\n            <div className={s.description}>\n                <img src={props.profile.photos.large}/>\n                {props.isOwner && <input type={'file'} onChange={onPhotoSelected}/>}\n\n               {/* <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>*/}\n                {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}\n                {/*<div>aboutMe: {props.profile.aboutMe}</div>\n                <div>FullName - {props.profile.fullName}</div>*/}\n            </div>\n        </div>\n\n    )\n}\n\n   /* const ProfileData=(props)=> {\n        return (\n            <div>\n                <div>\n                    <img src={props.profile.photos.large} className={s.mainPhoto}/>\n                    {props.isOwner && <button onClick={props.goToEditMode}>edit</button>}\n                </div>\n            <div>\n            <b>Full name</b> : {props.profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b> : {props.profile.lookingForAJob ? 'yes' : 'no'}\n        </div>\n        {props.profile.lookingForAJob &&\n        <div>\n            <b>My professional skills</b>:{props.profile.lookingForAJobDescription}\n        </div>}\n        <div>\n            <b>Looking for a job</b> : {props.profile.lookingForAJob ? 'yes' : 'no'}\n        </div>\n\n        <div>\n            <b> About me </b>: {props.profile.aboutMe}\n        </div>\n\n        <div>\n            <b> Contacts </b>: {Object.keys(props.profile.contacts).map(key =>\n        {return <Contact key={key} contactValue={props.profile.contacts[key]}/>})}\n        </div>\n    </div>)\n    }*/\n\nexport default ProfileInfo;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\DIalogItem\\DialogItem.jsx",[],"D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Dialogs\\Message\\Message.jsx",["173"],"import React from 'react';\nimport s from './../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    let newMessage= React.createRef();\n\n   /* let sendMessage= () => {\n        let text=newMessage.current.value;/!*\n        props.dispatch( sendMessageActionCreator() )*!/;\n    }*/\n    return <div className={s.dialog}>\n        {props.mes}\n    </div>\n}\n\nexport default Message;\n","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["174"],"import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\nimport {Textarea} from \"../../../common/FormControls/FormsControls\";\nimport Button from 'react-bootstrap/Button';\n\n\nclass MyPosts extends React.Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('kpaso')\n    }\n\n    render() {\n\n        let postData = this.props.posts\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>)\n\n        let newPostElement = React.createRef();\n\n        /*let onAddPost = () => {\n            props.addPost();\n        }*/\n\n        let addPost = (value) => {\n            this.props.addPost(value.newPostMessage)\n        }\n\n        return (\n            <div className={s.postsAll}>\n                <h3>My posts</h3>\n                <PostsFormRedux onSubmit={addPost}/>\n                <div className={s.posts}>\n                    {postData}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst maxLength10=maxLengthCreator(10)\n\n  const PostsForm = (props) => {\n      return <form onSubmit={props.handleSubmit}>\n          <Field component={Textarea} name={'newPostMessage'}\n                 validate={[required, maxLength10]}/>\n          {/*<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>*/}\n          <Button variant=\"primary\">Add post</Button>\n          <Button variant=\"primary\">Remove post</Button>\n      </form>\n  }\nconst PostsFormRedux = reduxForm({form: 'postsForm'})(PostsForm)\n\nexport default MyPosts;","D:\\WebstormProjects\\kamasutra\\githubpagesReactSocNetwork\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":5,"column":17,"nodeType":"181","endLine":5,"endColumn":39},{"ruleId":"182","severity":1,"message":"183","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":9},{"ruleId":"182","severity":1,"message":"183","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":9},{"ruleId":"179","severity":1,"message":"180","line":25,"column":24,"nodeType":"181","endLine":25,"endColumn":48},{"ruleId":"186","severity":1,"message":"187","line":27,"column":43,"nodeType":"188","messageId":"189","endLine":27,"endColumn":45},{"ruleId":"182","severity":1,"message":"190","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"191","line":18,"column":9,"nodeType":"184","messageId":"185","endLine":18,"endColumn":18},{"ruleId":"192","severity":1,"message":"193","line":22,"column":5,"nodeType":"194","messageId":"195","endLine":30,"endColumn":6},{"ruleId":"186","severity":1,"message":"187","line":48,"column":50,"nodeType":"188","messageId":"189","endLine":48,"endColumn":52},{"ruleId":"196","severity":1,"message":"197","line":8,"column":51,"nodeType":"198","messageId":"199","endLine":8,"endColumn":87},{"ruleId":"179","severity":1,"message":"180","line":20,"column":25,"nodeType":"181","endLine":20,"endColumn":114},{"ruleId":"179","severity":1,"message":"180","line":7,"column":5,"nodeType":"181","endLine":7,"endColumn":84},{"ruleId":"182","severity":1,"message":"190","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"200","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":30},{"ruleId":"182","severity":1,"message":"201","line":8,"column":10,"nodeType":"184","messageId":"185","endLine":8,"endColumn":18},{"ruleId":"182","severity":1,"message":"202","line":8,"column":20,"nodeType":"184","messageId":"185","endLine":8,"endColumn":31},{"ruleId":"179","severity":1,"message":"180","line":30,"column":17,"nodeType":"181","endLine":30,"endColumn":56},{"ruleId":"182","severity":1,"message":"203","line":6,"column":9,"nodeType":"184","messageId":"185","endLine":6,"endColumn":19},{"ruleId":"182","severity":1,"message":"204","line":21,"column":13,"nodeType":"184","messageId":"185","endLine":21,"endColumn":27},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'React' is defined but never used.","'stateCopy' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'ProfileStatusWithHooks' is defined but never used.","'editMode' is assigned a value but never used.","'setEditMode' is assigned a value but never used.","'newMessage' is assigned a value but never used.","'newPostElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]